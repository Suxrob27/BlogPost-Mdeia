@page "/blog/{urlHandle}"
@using DB.Context
@using Microsoft.AspNetCore.Identity
@model Bloggie.Web.Pages.Admin.Blog.DetailModel
@{
    ViewData["Title"] = "zxc";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@inject UserManager<ApplicationUser> userManager ;
@inject SignInManager<ApplicationUser> sigInManager ;

<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <div class="container col-12 col-lg-6">
    @if (Model.BlogModel != null)
    {
        <div>
            @{
                if (Model.Liked)
                {
                    <a style="cursor:pointer">
                        <i class="fa-solid fa-thumbs-up"></i>
                    </a>
                }
                else
                {
                    <a id="btnLike" style="cursor:pointer">
                        <span class="material-symbols-outlined">thumb_up</span>
                    </a>
                    <span id="totalLikes">@Model.BlogModel.Likes.Count> likes</span>
                }
            }

        </div> 
        @if (Model.BlogModel.Tags != null && Model.BlogModel.Tags.Any())
        {
            @foreach (var tags in Model.BlogModel.Tags)
            {
                <a href="/tags/@tags.Name">
                <span class="badge rounded-pill bg-black">@tags.Name</span>
                </a>

            }
        }
        <p class="display-3">@Model.BlogModel.Heading</p>
        <div class="d-flex justify-content-between">
            <span class="text-secondary">Auhtor  - @Model.BlogModel.Author</span>
            <span class="text-secondary">Published Date  - @Model.BlogModel.PublishedDate</span>
        </div>
     <img src="@Model.BlogModel.FeaturedImageUrl" class="d-block img-fluid mb-3"/>

     <div class="mb-3 blog-details">
         @Html.Raw(Model.BlogModel.Content);
     </div>
     <div class="card">
         <div class="card-header">
             <h5> Comments </h5>
              <form method="post">
                    <div class="mb-3">
                        <label class="form-label">Comment Description</label>
                        <input type="text" class="form-control" asp-for="model.Description" required maxlength="200"/>
                        <span class="text-danger" asp-validation-for="model.Description"></span>
                    </div>
                    <div class="mb-3">
                        <button type="submit" class="btn btn-dark">Add Comment</button>
                    </div>
                </form>
         </div>
     </div>
<div class="card-body">
            @if (Model.Comments != null)
            {
                 @foreach (var item in Model.Comments)
                 {
                   <div class="card">
                       <div class="card-body">
                           <div>@item.Description</div>
                       </div>
                       <div class="d-flex justify-content-between">
                           <span class="text-secondary">@item.UserName</span>
                           <span class="text-secondary">@item.CreatedData.ToShortDateString()</span>
                           <span class="bg-danger">Delete </span>
                       </div>
                   </div>             
                 }
            }
</div>
}
    @section Scripts {
        <script>
                const btnLike = document.getElementById('btnLike');
                const totalLikesElement = document.getElementById('totalLikes');

                async function getTotalLikes() {
                fetch('/api/BlogPostLike/@Model.BlogModel.Id/totallikes', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': '*/*'
                        }
                    })
                        .then(data => data.json())
                        .then(result => totalLikesElement.innerHTML = result);
                }

            async function addLikeForBlog() {

                fetch('/api/BlogPostLike/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': '*/*'
                    },
                    body: JSON.stringify({ blogPostId: '@Model.BlogModel.Id', userId: '@userManager.GetUserId(User)' })
                })
                    .then(() => {
                        btnLike.innerHTML = '<span class="material-symbols-outlined">thumb_up</span>'
                        btnLike.removeEventListener('click', addLikeForBlog);
                        getTotalLikes();
                    });
            }

            btnLike.addEventListener('click', addLikeForBlog);

        </script>
    }
    @section Scripto {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
